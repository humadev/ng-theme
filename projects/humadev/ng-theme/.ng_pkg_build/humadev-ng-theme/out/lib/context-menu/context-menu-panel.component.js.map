{"version":3,"file":"context-menu-panel.component.js","sourceRoot":"","sources":["context-menu-panel.component.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EACL,SAAS,EACT,MAAM,EACN,YAAY,EACZ,KAAK,EACL,YAAY,EACZ,UAAU,EAEX,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,eAAe,EAAE,MAAM,MAAM,CAAC;AACvC,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AA+CzC,MAAM;;;;IAMJ,YAAoB,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;+BALP,IAAI,YAAY,EAAE;sBAErC,IAAI,eAAe,CAAS,IAAI,CAAC;qBAClC,IAAI,eAAe,CAAS,IAAI,CAAC;KAEF;;;;;IAEvC,OAAO,CAAC,IAAI;QACV,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjC;;;;;IAGD,aAAa,CAAC,KAAiB;QAC7B,KAAK,CAAC,cAAc,EAAE,CAAC;;;;;IAGzB,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;KACrD;;;;;IAED,gBAAgB,CAAC,WAAW;QAC1B,IAAI,WAAW,IAAI,WAAW,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,EAAE;YAChE,uBAAM,OAAO,GACX,YAAY,CAAC,WAAW,CAAC,WAAW,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC;gBAClE,CAAC,CAAC,IAAI;gBACN,CAAC,CAAC,KAAK,CAAC;YACZ,IAAI,OAAO,EAAE;gBACX,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,KAAK,CAAC;aACd;SACF;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;YAjFF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;;;;;;;;;;;GAYT;gBACD,MAAM,EAAE;oBACN;;;;;;;;;;;;;;;;;;;;;;;;;;KA0BC;iBACF;aACF;;;;YAnDC,UAAU;;;gCAqDT,MAAM;yBACN,KAAK;8BAUL,YAAY,SAAC,aAAa,EAAE,CAAC,QAAQ,CAAC","sourcesContent":["import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostListener,\n  ElementRef,\n  AfterViewInit\n} from '@angular/core';\nimport { ContextMenu } from './context-menu';\nimport { BehaviorSubject } from 'rxjs';\nimport { intersection } from 'lodash-es';\n\n@Component({\n  selector: 'hd-menu-panel',\n  template: `\n    <div class=\"hd-context-menu-panel\"\n      fxLayout=\"column\">\n        <ng-template ngFor let-item [ngForOf]=\"menuItem\">\n            <a mat-button *ngIf=\"item.display !== false && checkGroupAccess(item.groupPermission)\"\n                (click)='onClick(item)'>\n                    <mat-icon style=\"width:15%; font-size: 16px; height: auto\">{{item.icon}}</mat-icon>\n                    <div style=\"display: inline-block; width:75%\">{{item.title}}</div>\n                    <mat-icon style=\"width:10%\" *ngIf='item.children && item.children.length'>keyboard_arrow_right</mat-icon>\n            </a>\n        </ng-template>\n    </div>\n  `,\n  styles: [\n    `\n        :host{\n            max-height: 500px;\n            overflow-y: scroll;\n            position: fixed !important;\n            min-width: 200px;\n            display: block;\n            z-index:10;\n            box-shadow: 0px 1px 2px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n        }\n\n        :host div a{\n            display: block;\n            text-align: left;\n            padding:4px 10px;\n            font-size:12px;\n            md-icon{\n                font-size:12px !important;\n                height: 16px;\n            }\n        }\n\n        :host div a md-icon{\n            font-size:12px !important;\n            height: 16px;\n        }\n    `\n  ]\n})\nexport class ContextMenuPanelComponent implements AfterViewInit {\n  @Output() menuItemClicked = new EventEmitter();\n  @Input() menuItem: [ContextMenu];\n  height = new BehaviorSubject<number>(null);\n  width = new BehaviorSubject<number>(null);\n\n  constructor(private _el: ElementRef) {}\n\n  onClick(item) {\n    this.menuItemClicked.emit(item);\n  }\n\n  @HostListener('contextmenu', ['$event'])\n  onContextMenu(event: MouseEvent): void {\n    event.preventDefault();\n  }\n\n  ngAfterViewInit() {\n    this.height.next(this._el.nativeElement.offsetHeight);\n    this.width.next(this._el.nativeElement.offsetWidth);\n  }\n\n  checkGroupAccess(groupAccess) {\n    if (groupAccess && groupAccess.permissions && groupAccess.groups) {\n      const allowed =\n        intersection(groupAccess.permissions, groupAccess.groups).length > 0\n          ? true\n          : false;\n      if (allowed) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  }\n}\n"]}