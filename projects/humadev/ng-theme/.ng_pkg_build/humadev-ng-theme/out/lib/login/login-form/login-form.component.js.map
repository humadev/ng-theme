{"version":3,"file":"login-form.component.js","sourceRoot":"","sources":["login-form.component.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,SAAS,EAAU,YAAY,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAyCzD,MAAM;;;;IAOF,YACY;QAAA,OAAE,GAAF,EAAE;qBANG,OAAO;qBACN,IAAI,YAAY,EAAE;KAM/B;;;;IAEL,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3F,CAAC,CAAC;KACN;;;;;IAED,OAAO,CAAC,KAAK;QACT,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACzC;KACJ;;;;;IAED,kBAAkB,CAAC,KAAK;QACpB,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;YAC3B,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;SACvB;aAAM;YACH,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;SAC3B;KACJ;;;YArEJ,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAkCJ;gBACN,MAAM,EAAE,CAAC,+fAA+f,CAAC;aAC1gB;;;;YAxCQ,WAAW;;;sBA2Cf,KAAK;sBACL,MAAM;qBAEN,KAAK","sourcesContent":["import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'hd-login-form',\n  template: `<div>\n    <img [src]=\"logo\">\n</div>\n<h3>Sign in to admin</h3>\n<form [formGroup]='loginForm' (ngSubmit)=\"onLogin($event)\">\n    <mat-form-field>\n        <input matInput formControlName=\"email\" placeholder=\"Email\" autofill=\"off\">\n        <mat-hint align=\"start\" class=\"error\" *ngIf=\"loginForm.controls.email.invalid && loginForm.controls.email.touched\">\n            <span *ngIf=\"loginForm.controls.email.errors.required\">\n                Email harus diisi\n            </span>\n            <span *ngIf=\"loginForm.controls.email.errors.email\">\n                Format email salah\n            </span>\n        </mat-hint>\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput formControlName=\"password\" type=\"password\" placeholder=\"Password\" #pass>\n        <button type=\"button\" mat-icon-button matSuffix (click)=\"changePasswordType(pass)\">\n            <mat-icon>visibility</mat-icon>\n        </button>\n        <mat-hint align=\"start\" class=\"error\" *ngIf=\"loginForm.controls.password.invalid && loginForm.controls.password.touched\">\n            <span *ngIf=\"loginForm.controls.password.errors.required\">\n                Password harus diisi\n            </span>\n            <span *ngIf=\"loginForm.controls.password.errors.minlength\">\n                Password minimal {{loginForm.controls.password.errors.minlength.requiredLength}} karakter\n            </span>\n            <span *ngIf=\"loginForm.controls.password.errors.maxlength\">\n                Password maximal {{loginForm.controls.password.errors.maxlength.requiredLength}} karakter\n            </span>\n        </mat-hint>\n    </mat-form-field>\n    <button mat-raised-button color=\"primary\" class='mat-elevation-z5'>Sign In</button>\n</form>`,\n  styles: [`:host{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-flow:column;flex-flow:column;vertical-align:middle;text-align:center;width:100%;padding-top:20%;font-family:Poppins;color:#212529}:host img{max-width:250px;margin-bottom:50px}:host h3{display:block;font-size:1.4rem;margin-bottom:50px;font-weight:500;font-family:Poppins;color:#212529}:host form{text-align:center}:host form mat-form-field{max-width:60%;margin:20px auto;display:block}`]\n})\nexport class LoginFormComponent implements OnInit {\n\n    @Input() title = 'Title';\n    @Output() login = new EventEmitter();\n    loginForm;\n    @Input() logo: string;\n\n    constructor(\n        private fb: FormBuilder\n    ) { }\n\n    ngOnInit() {\n        this.loginForm = this.fb.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]],\n        });\n    }\n\n    onLogin(event) {\n        if (this.loginForm.valid) {\n            this.login.emit(this.loginForm.value);\n        }\n    }\n\n    changePasswordType(input) {\n        if (input.type === 'password') {\n            input.type = 'text';\n        } else {\n            input.type = 'password';\n        }\n    }\n\n}\n"]}