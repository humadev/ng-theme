{"version":3,"file":"upload-container.component.js","sourceRoot":"","sources":["upload-container.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormControl } from '@angular/forms';\nimport {\n    Component,\n    ViewEncapsulation,\n    Input,\n    HostListener,\n    AfterViewInit,\n    ContentChild,\n    ViewChild,\n    ElementRef,\n    Renderer2\n} from '@angular/core';\nimport { UploadFileDirective } from '../upload-file.directive';\n\n@Component({\n  selector: 'hd-upload-container',\n  template: `<ng-content></ng-content>\n<div class='hd-upload-container'>\n    <input type='file' #filetoupload style='display:none;'>\n    <mat-icon>file_upload</mat-icon>\n    <span class='hd-upload-placeholder'>{{placeholder}}</span>\n    <span class='hd-upload-filename'>{{filename}}</span>\n    <span class='hd-upload-hint'>{{hint}}</span>\n</div>`,\n  styles: [`.hd-upload-container{margin:15px 0;cursor:pointer;border:thin dashed #676c7b;color:#676c7b;padding:20px;text-align:center}.hd-upload-container .mat-icon{vertical-align:middle}.hd-upload-container .hd-upload-hint{text-align:center;display:block;font-size:10px}.hd-upload-container .hd-upload-filename{display:block;text-align:center;font-size:12px;min-height:18px}input[type=file]{display:none}`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class UploadContainerComponent implements AfterViewInit {\n\n    @Input() placeholder = 'Upload file';\n    @Input() hint = '';\n    @ContentChild(UploadFileDirective) uploadFile: UploadFileDirective;\n    @ViewChild('filetoupload') uploadInput: ElementRef;\n    filename: string;\n\n    constructor(\n        private render: Renderer2\n    ) {\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(e) {\n        this.uploadInput.nativeElement.click();\n    }\n\n    ngAfterViewInit() {\n        this.render.listen(this.uploadInput.nativeElement, 'change', e => {\n            if (e.target.files.length) {\n                this.filename = e.target.files[0].name;\n            }\n            const fileList: FileList = e.target.files;\n            if (fileList.length > 0) {\n                const file: File = fileList[0];\n                const myReader: FileReader = new FileReader();\n                myReader.onloadend = (event) => {\n                    const image = myReader.result;\n                    this.uploadFile.setValue(image);\n                }\n                myReader.readAsDataURL(file);\n            }\n        });\n    }\n\n    @HostListener('dragover', ['$event']) public onDragOver(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        // this.background = '#999';\n    }\n    @HostListener('dragleave', ['$event']) public onDragLeave(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        // this.background = '#eee'\n    }\n    @HostListener('drop', ['$event']) public onDrop(evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (evt.dataTransfer.files.length) {\n            this.filename = evt.dataTransfer.files[0].name;\n        }\n        const fileList: FileList = evt.dataTransfer.files;\n        if (fileList.length > 0) {\n            const file: File = fileList[0];\n            const myReader: FileReader = new FileReader();\n            myReader.onloadend = (event) => {\n                const image = myReader.result;\n                this.uploadFile.setValue(image);\n            }\n            myReader.readAsDataURL(file);\n        }\n    }\n}\n"]}