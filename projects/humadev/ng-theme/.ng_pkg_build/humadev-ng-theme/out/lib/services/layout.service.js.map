{"version":3,"file":"layout.service.js","sourceRoot":"","sources":["layout.service.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,MAAM,CAAC;;AAKvC,MAAM;IAUF;yBARY,IAAI,eAAe,CAAS,EAAE,CAAC;8BAC1B,IAAI,eAAe,CAAU,KAAK,CAAC;0BACvC,IAAI,eAAe,CAAU,KAAK,CAAC;2BAClC,IAAI,eAAe,CAAU,IAAI,CAAC;4BACjC,IAAI,eAAe,CAAU,KAAK,CAAC;gCAC/B,IAAI,eAAe,CAAU,KAAK,CAAC;qBAC9C,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC;QAGzC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;;YAChC,MAAM,CAAC,GAAG;gBACN,WAAW,EAAE,MAAM;aACtB,CAAA;YACD,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5D,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,KAAK,EAAE;;YACZ,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;SACxC;aAAM;;YACH,MAAM,CAAC,GAAG;gBACN,WAAW,EAAE,IAAI;aACpB,CAAA;YACD,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAChC,IAAI,GAAG,EAAE;gBACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACjC;SACJ,CAAC,CAAC;KACN;;;YApCJ,UAAU,SAAC;gBACR,UAAU,EAAE,MAAM;aACrB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LayoutService {\n\n    pageTitle = new BehaviorSubject<string>('');\n    topProgressBar = new BehaviorSubject<boolean>(false);\n    lockScroll = new BehaviorSubject<boolean>(false);\n    sidebarOpen = new BehaviorSubject<boolean>(true);\n    closeOverlay = new BehaviorSubject<boolean>(false);\n    showNotification = new BehaviorSubject<boolean>(false);\n    state = localStorage.getItem('humadev-theme');\n\n    constructor() {\n        this.sidebarOpen.subscribe(isOpen => {\n            const s = {\n                sidebarOpen: isOpen\n            }\n            localStorage.setItem('humadev-theme', JSON.stringify(s));\n        });\n        \n        if (this.state) {\n            const s = JSON.parse(this.state);\n            this.sidebarOpen.next(s.sidebarOpen);\n        } else {\n            const s = {\n                sidebarOpen: true\n            }\n            localStorage.setItem('humadev-theme', JSON.stringify(s));\n        }\n\n        this.closeOverlay.subscribe((res) => {\n            if (res) {\n                this.closeOverlay.next(false);\n            }\n        });\n    }\n}\n"]}