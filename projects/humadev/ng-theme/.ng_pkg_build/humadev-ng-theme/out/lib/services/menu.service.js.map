{"version":3,"file":"menu.service.js","sourceRoot":"","sources":["menu.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { BehaviorSubject } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { LayoutService } from './layout.service';\nimport { map, filter, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  pageTitle = new BehaviorSubject<string>('');\n  lazyLoad = true;\n  sidenav = new BehaviorSubject([]);\n  moduleIndex = new Subject<number>();\n  startMenu = [];\n  moduleActive = new Subject<string>();\n\n  constructor(\n    private router: Router,\n    private activeRoute: ActivatedRoute,\n    private loc: Location,\n    private _ls: LayoutService\n  ) {\n    this.router.events\n      .pipe(\n        map(event => {\n          if (loc.path() !== '') {\n            const modulePath = loc.path().split('/')[1];\n            this.moduleActive.next(modulePath);\n            this.router.config.forEach((el, i) => {\n              if (el.path === modulePath) {\n                this.moduleIndex.next(i);\n              }\n            });\n          }\n          return event;\n        }),\n        filter(event => event instanceof NavigationEnd),\n        map(() => this.activeRoute),\n        map(route => {\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter(route => route.outlet === 'primary'),\n        switchMap(route => route.data)\n      )\n      .subscribe(res => {\n        this._ls.pageTitle.next(res.name);\n        this.pageTitle.next(res.name);\n      });\n    if (this.lazyLoad) {\n      this.moduleIndex.subscribe(res => {\n        if (this.router.config[res]['_loadedConfig']) {\n          this.sidenav.next(\n            this.router.config[res]['_loadedConfig'].routes[0].children\n          );\n        }\n      });\n    } else {\n      this.sidenav.next(this.router.config);\n    }\n\n    this.startMenu = this.router.config;\n  }\n\n  navigate(url: string) {\n    this.router.navigate(['/' + url]);\n  }\n}\n"]}